.dashboard {
    display: flex;
    height: 100vh;
    background-color: #121218;
    color: #f5f5f5;
    font-family: "Inter", "Segoe UI", Roboto, sans-serif;
  }
  
  /* Animações */
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  
  @keyframes slideIn {
    from {
      transform: translateX(-20px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.03);
    }
    100% {
      transform: scale(1);
    }
  }
  
  .fadeIn {
    animation: fadeIn 0.8s ease-out forwards;
  }
  
  .slideIn {
    opacity: 0;
    animation: slideIn 0.5s ease-out forwards;
  }
  
  .pulseAnimation {
    animation: pulse 2s infinite ease-in-out;
  }
  
  /* Sidebar styles */
  .sidebar {
    width: 320px;
    background-color: #1a1a24;
    box-shadow: 2px 0 10px rgba(0, 0, 0, 0.2);
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    position: relative;
    overflow: hidden;
  }
  
  .sidebar::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    width: 2px;
    height: 100%;
    background: linear-gradient(
      to bottom,
      rgba(106, 27, 154, 0),
      rgba(106, 27, 154, 0.3),
      rgba(106, 27, 154, 0)
    );
  }
  
  .logo h1 {
    font-size: 1.5rem;
    margin-bottom: 2rem;
    font-weight: 600;
    color: #6a1b9a;
    letter-spacing: 0.5px;
    text-shadow: 0 0 10px rgba(106, 27, 154, 0.3);
  }
  
  .taskCreator {
    display: flex;
    margin-bottom: 1.5rem;
  }
  
  .taskInput {
    flex: 1;
    background-color: #23232f;
    border: 1px solid #33334a;
    padding: 0.8rem 1rem;
    border-radius: 4px 0 0 4px;
    color: #f5f5f5;
    font-size: 0.9rem;
    transition: all 0.3s ease;
  }
  
  .taskInput:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(106, 27, 154, 0.3);
    border-color: #6a1b9a;
  }
  
  .addTaskButton {
    background-color: #6a1b9a;
    color: white;
    border: none;
    padding: 0.8rem 1rem;
    border-radius: 0 4px 4px 0;
    cursor: pointer;
    font-weight: 500;
    transition: all 0.3s ease;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  }
  
  .addTaskButton:hover {
    background-color: #4a148c;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  }
  
  .addTaskButton:active {
    transform: translateY(1px);
  }
  
  .taskList {
    flex: 1;
    overflow-y: auto;
  }
  
  .taskList h2 {
    font-size: 1.1rem;
    margin-bottom: 1rem;
    font-weight: 500;
    color: #bbbbbb;
  }
  
  .emptyState {
    color: #777;
    font-style: italic;
    padding: 1rem 0;
  }
  
  .taskItem {
    background-color: #252533;
    border-radius: 8px;
    padding: 1rem;
    margin-bottom: 0.8rem;
    cursor: pointer;
    transition: all 0.3s ease;
    border-left: 3px solid transparent;
    position: relative;
    overflow: hidden;
  }
  
  .taskItem::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      120deg,
      transparent,
      rgba(106, 27, 154, 0.05),
      transparent
    );
    transform: translateX(-100%);
    transition: transform 0.6s ease;
  }
  
  .taskItem:hover {
    background-color: #2a2a3a;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }
  
  .taskItem:hover::before {
    transform: translateX(100%);
  }
  
  .selectedTask {
    border-left: 3px solid #6a1b9a;
    background-color: #2d2d3f;
  }
  
  .taskHeader {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 0.5rem;
  }
  
  .taskHeader h3 {
    font-size: 0.95rem;
    font-weight: 500;
    margin: 0;
  }
  
  .taskActions {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .deleteButton {
    background-color: transparent;
    color: #aaa;
    border: none;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    cursor: pointer;
    transition: all 0.2s;
    opacity: 0.6;
  }
  
  .deleteButton:hover {
    background-color: rgba(255, 80, 80, 0.2);
    color: #ff5050;
    opacity: 1;
  }
  
  .taskProgress {
    font-size: 0.8rem;
    color: #aaa;
  }
  
  .priorityLow {
    background-color: #388e3c;
    color: white;
    font-size: 0.7rem;
    padding: 0.2rem 0.6rem;
    border-radius: 12px;
    transition: transform 0.2s;
  }
  
  .priorityMedium {
    background-color: #f57c00;
    color: white;
    font-size: 0.7rem;
    padding: 0.2rem 0.6rem;
    border-radius: 12px;
    transition: transform 0.2s;
  }
  
  .priorityHigh {
    background-color: #c62828;
    color: white;
    font-size: 0.7rem;
    padding: 0.2rem 0.6rem;
    border-radius: 12px;
    transition: transform 0.2s;
  }
  
  /* Main content styles */
  .mainContent {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    background: radial-gradient(circle at 50% 50%, #16161f 0%, #121218 100%);
  }
  
  .timerSection {
    text-align: center;
    max-width: 500px;
    width: 100%;
    padding: 2rem;
    border-radius: 12px;
    background-color: rgba(42, 42, 58, 0.4);
    backdrop-filter: blur(10px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  .timerSection:hover {
    transform: translateY(-5px);
  }
  
  .timerModes {
    display: flex;
    justify-content: center;
    margin-bottom: 2rem;
  }
  
  .modeButton {
    background-color: transparent;
    color: #aaa;
    border: none;
    padding: 0.6rem 1rem;
    margin: 0 0.5rem;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 500;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }
  
  .modeButton::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background-color: #6a1b9a;
    transition: all 0.3s ease;
    transform: translateX(-50%);
  }
  
  .modeButton:hover {
    color: white;
  }
  
  .modeButton:hover::after {
    width: 80%;
  }
  
  .activeMode {
    color: #6a1b9a;
    background-color: rgba(106, 27, 154, 0.1);
  }
  
  .activeMode::after {
    width: 80%;
  }
  
  .timer {
    font-size: 6rem;
    font-weight: 300;
    font-family: "Roboto Mono", monospace;
    margin: 1.5rem 0;
    color: white;
    letter-spacing: 2px;
    text-shadow: 0 0 15px rgba(106, 27, 154, 0.5);
    transition: all 0.3s ease;
  }
  
  .customTimeControl {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 1.5rem;
    gap: 0.5rem;
    color: #ccc;
  }
  
  .customTimeInput {
    width: 60px;
    background-color: #23232f;
    border: 1px solid #33334a;
    color: white;
    padding: 0.4rem;
    border-radius: 4px;
    font-size: 0.9rem;
    text-align: center;
    transition: all 0.3s;
  }
  
  .customTimeInput:focus {
    outline: none;
    border-color: #6a1b9a;
    box-shadow: 0 0 0 2px rgba(106, 27, 154, 0.3);
  }
  
  .customTimeInput::-webkit-inner-spin-button {
    opacity: 1;
    height: 24px;
  }
  
  .timerControls {
    margin: 2rem 0;
  }
  
  .startButton,
  .pauseButton {
    padding: 0.8rem 3rem;
    font-size: 1.1rem;
    border-radius: 30px;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
    font-weight: 500;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  }
  
  .startButton {
    background-color: #6a1b9a;
    color: white;
  }
  
  .startButton:hover {
    background-color: #4a148c;
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
  }
  
  .startButton:active {
    transform: translateY(1px);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  }
  
  .pauseButton {
    background-color: #555;
    color: white;
  }
  
  .pauseButton:hover {
    background-color: #666;
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
  }
  
  .pauseButton:active {
    transform: translateY(1px);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  }
  
  .currentTask {
    margin-top: 2rem;
    padding: 1rem;
    background-color: rgba(25, 25, 35, 0.8);
    border-radius: 8px;
    font-size: 0.9rem;
    color: #bbb;
    border-left: 3px solid #6a1b9a;
    transition: all 0.3s ease;
  }
  
  .currentTask:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }
  
  /* Scrollbar customization */
  ::-webkit-scrollbar {
    width: 8px;
  }
  
  ::-webkit-scrollbar-track {
    background: #1a1a24;
  }
  
  ::-webkit-scrollbar-thumb {
    background: #333344;
    border-radius: 4px;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    background: #444455;
  }
  
  /* Timer circular */
  .timerCircleContainer {
    position: relative;
    width: 300px;
    height: 300px;
    margin: 0 auto 2rem;
  }
  
  .timerDisplay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 10;
  }
  
  .timeText {
    font-size: 3.5rem;
    font-weight: 300;
    font-family: "Roboto Mono", monospace;
    color: white;
    letter-spacing: 2px;
    text-shadow: 0 0 15px rgba(106, 27, 154, 0.5);
  }
  
  .taskName {
    font-size: 0.9rem;
    color: #ccc;
    margin-top: 0.5rem;
    max-width: 80%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  .timerCircle {
    width: 100%;
    height: 100%;
    transform: rotate(-90deg); /* Inicia o preenchimento do círculo no topo */
    filter: drop-shadow(0 0 10px rgba(106, 27, 154, 0.3));
  }
  
  .timerCircleBackground {
    fill: none;
    stroke: rgba(106, 27, 154, 0.1);
    stroke-width: 4;
  }
  
  .timerCircleProgress {
    fill: none;
    stroke: #6a1b9a;
    stroke-width: 4;
    stroke-linecap: round;
    stroke-dasharray: 283; /* Aproximadamente 2 * PI * 45 */
    stroke-dashoffset: 0;
    transition: stroke-dashoffset 1s linear;
  }
  
  /* Animação para quando o timer estiver rodando */
  @keyframes glowPulse {
    0% {
      stroke: #6a1b9a;
      filter: drop-shadow(0 0 3px rgba(106, 27, 154, 0.5));
    }
    50% {
      stroke: #8e24aa;
      filter: drop-shadow(0 0 8px rgba(106, 27, 154, 0.8));
    }
    100% {
      stroke: #6a1b9a;
      filter: drop-shadow(0 0 3px rgba(106, 27, 154, 0.5));
    }
  }
  
  .timerCircleProgress {
    animation: none;
  }
  
  /* Aplicar animação quando timer estiver rodando */
  div:has(.timerCircleProgress):has(~ .timerControls .pauseButton)
    .timerCircleProgress {
    animation: glowPulse 2s infinite ease-in-out;
  }
  
  /* Estilos para seletor de prioridade */
  .inputWrapper {
    flex: 1;
    position: relative;
    display: flex;
    align-items: center;
  }
  
  .taskInput {
    width: 100%;
    border-radius: 4px 0 0 4px;
    padding-right: 100px; /* Espaço para os botões de prioridade */
  }
  
  .prioritySelector {
    position: absolute;
    right: 8px;
    display: flex;
    gap: 4px;
    align-items: center;
  }
  
  .priorityButton {
    background-color: transparent;
    border: none;
    border-radius: 50%;
    width: 22px;
    height: 22px;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    cursor: pointer;
    opacity: 0.5;
    transition: all 0.2s;
  }
  
  .priorityButton:hover {
    opacity: 0.8;
    transform: scale(1.1);
  }
  
  .activePriority {
    opacity: 1;
    transform: scale(1.15);
  }
  
  .priorityDot {
    width: 14px;
    height: 14px;
    border-radius: 50%;
    transition: all 0.2s;
  }
  
  .activePriority .priorityDot {
    box-shadow: 0 0 8px rgba(255, 255, 255, 0.5);
  }