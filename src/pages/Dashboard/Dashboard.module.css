.dashboard {
  display: flex;
  height: calc(100vh - 70px); /* Ajustar para a altura da navbar */
  background-color: #121218;
  color: #f5f5f5;
  font-family: "Inter", "Segoe UI", Roboto, sans-serif;
}

.dashboardContainer {
  position: relative;
  display: flex;
  min-height: calc(100vh - 70px);
  width: 100%; /* Ocupar toda a largura */
  background-color: #121218;
  color: #f5f5f5;
  font-family: "Inter", "Segoe UI", Roboto, sans-serif;
  overflow: hidden;
}
/* Animações */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideIn {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.03);
  }
  100% {
    transform: scale(1);
  }
}

.fadeIn {
  animation: fadeIn 0.8s ease-out forwards;
}

.slideIn {
  opacity: 0;
  animation: slideIn 0.5s ease-out forwards;
}

.pulseAnimation {
  animation: pulse 2s infinite ease-in-out;
}

.logo h1 {
  font-size: 1.5rem;
  margin-bottom: 2rem;
  font-weight: 600;
  color: #6a1b9a;
  letter-spacing: 0.5px;
  text-shadow: 0 0 10px rgba(106, 27, 154, 0.3);
}

/* Main content styles */
.mainContent {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  background: radial-gradient(circle at 50% 50%, #16161f 0%, #121218 100%);
  width: 100%; /* Ocupar todo o espaço disponível */
  height: 100%;
  box-sizing: border-box;
  margin-left: 0; /* Remover qualquer margem à esquerda */
  position: relative; /* Manter contexto de posicionamento */
}

/* Timer section - Posicionamento absoluto para garantir centralização */
.timerSection {
  text-align: center;
  max-width: 500px;
  width: calc(100% - 4rem); /* Ajustar para padding interno */
  padding: 2rem;
  border-radius: 12px;
  background-color: rgba(42, 42, 58, 0.4);
  backdrop-filter: blur(10px);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  transition: box-shadow 0.3s ease; /* Mudar para box-shadow apenas */
  display: flex;
  flex-direction: column;
  align-items: center;
  position: absolute; /* Posicionamento absoluto */
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%); /* Centralização perfeita */
  z-index: 1; /* Garantir que fique acima de outros elementos */
}

/* Remover transform adicional que descentraliza */
.timerSection:hover {
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
  /* Sem transform aqui para manter centralizado */
}

.timerCircleContainer {
  position: relative;
  width: 300px;
  height: 300px;
  margin: 0 auto 2rem;
  display: flex;
  justify-content: center;
}

.timerModes {
  display: flex;
  justify-content: center;
  margin-bottom: 2rem;
}

.modeButton {
  background-color: transparent;
  color: #aaa;
  border: none;
  padding: 0.6rem 1rem;
  margin: 0 0.5rem;
  border-radius: 4px;
  cursor: pointer;
  font-weight: 500;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.modeButton::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 50%;
  width: 0;
  height: 2px;
  background-color: #6a1b9a;
  transition: all 0.3s ease;
  transform: translateX(-50%);
}

.modeButton:hover {
  color: white;
}

.modeButton:hover::after {
  width: 80%;
}

.activeMode {
  color: #6a1b9a;
  background-color: rgba(106, 27, 154, 0.1);
}

.activeMode::after {
  width: 80%;
}

.timer {
  font-size: 6rem;
  font-weight: 300;
  font-family: "Roboto Mono", monospace;
  margin: 1.5rem 0;
  color: white;
  letter-spacing: 2px;
  text-shadow: 0 0 15px rgba(106, 27, 154, 0.5);
  transition: all 0.3s ease;
}

.customTimeControl {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 1.5rem;
  gap: 0.5rem;
  color: #ccc;
}

.customTimeInput {
  width: 60px;
  background-color: #23232f;
  border: 1px solid #33334a;
  color: white;
  padding: 0.4rem;
  border-radius: 4px;
  font-size: 0.9rem;
  text-align: center;
  transition: all 0.3s;
}

.customTimeInput:focus {
  outline: none;
  border-color: #6a1b9a;
  box-shadow: 0 0 0 2px rgba(106, 27, 154, 0.3);
}

.customTimeInput::-webkit-inner-spin-button {
  opacity: 1;
  height: 24px;
}

.timerControls {
  margin: 2rem 0;
}

.startButton,
.pauseButton {
  padding: 0.8rem 3rem;
  font-size: 1.1rem;
  border-radius: 30px;
  border: none;
  cursor: pointer;
  transition: all 0.3s ease;
  font-weight: 500;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.startButton {
  background-color: #6a1b9a;
  color: white;
}

.startButton:hover {
  background-color: #4a148c;
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
}

.startButton:active {
  transform: translateY(1px);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
}

.pauseButton {
  background-color: #555;
  color: white;
}

.pauseButton:hover {
  background-color: #666;
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
}

.pauseButton:active {
  transform: translateY(1px);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
}

.currentTask {
  margin-top: 2rem;
  padding: 1rem;
  background-color: rgba(25, 25, 35, 0.8);
  border-radius: 8px;
  font-size: 0.9rem;
  color: #bbb;
  border-left: 3px solid #6a1b9a;
  transition: all 0.3s ease;
}

.currentTask:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

/* Scrollbar customization */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #1a1a24;
}

::-webkit-scrollbar-thumb {
  background: #333344;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #444455;
}

/* Timer circular */
.timerCircleContainer {
  position: relative;
  width: 300px;
  height: 300px;
  margin: 0 auto 2rem;
}

.timerDisplay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 10;
}

.timeText {
  font-size: 3.5rem;
  font-weight: 300;
  font-family: "Roboto Mono", monospace;
  color: white;
  letter-spacing: 2px;
  text-shadow: 0 0 15px rgba(106, 27, 154, 0.5);
}

.taskName {
  font-size: 0.9rem;
  color: #ccc;
  margin-top: 0.5rem;
  max-width: 80%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.timerCircle {
  width: 100%;
  height: 100%;
  transform: rotate(-90deg); /* Inicia o preenchimento do círculo no topo */
  filter: drop-shadow(0 0 10px rgba(106, 27, 154, 0.3));
}

.timerCircleBackground {
  fill: none;
  stroke: rgba(106, 27, 154, 0.1);
  stroke-width: 4;
}

.timerCircleProgress {
  fill: none;
  stroke: #6a1b9a;
  stroke-width: 4;
  stroke-linecap: round;
  stroke-dasharray: 283; /* Aproximadamente 2 * PI * 45 */
  stroke-dashoffset: 0;
  transition: stroke-dashoffset 1s linear;
}

/* Animação para quando o timer estiver rodando */
@keyframes glowPulse {
  0% {
    stroke: #6a1b9a;
    filter: drop-shadow(0 0 3px rgba(106, 27, 154, 0.5));
  }
  50% {
    stroke: #8e24aa;
    filter: drop-shadow(0 0 8px rgba(106, 27, 154, 0.8));
  }
  100% {
    stroke: #6a1b9a;
    filter: drop-shadow(0 0 3px rgba(106, 27, 154, 0.5));
  }
}

.timerCircleProgress {
  animation: none;
}

/* Aplicar animação quando timer estiver rodando */
div:has(.timerCircleProgress):has(~ .timerControls .pauseButton)
  .timerCircleProgress {
  animation: glowPulse 2s infinite ease-in-out;
}

/* Botão para toggle do sidebar */
.sidebarToggle {
  position: fixed;
  top: 80px;
  left: 10px;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: #6a1b9a;
  border: none;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  z-index: 101;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  transition: all 0.3s ease;
  margin-top: 18px;
}

.sidebarToggle.active {
  left: 330px;
}

.sidebarToggle:hover {
  background-color: #4a148c;
  transform: scale(1.05);
}

.sidebarToggle span {
  display: block;
  width: 20px;
  height: 2px;
  background-color: white;
  margin: 2px 0;
  transition: all 0.3s ease;
}

.sidebarToggle.active span:nth-child(1) {
  transform: rotate(45deg) translate(3px, 3px);
}

.sidebarToggle.active span:nth-child(2) {
  opacity: 0;
}

.sidebarToggle.active span:nth-child(3) {
  transform: rotate(-45deg) translate(3px, -3px);
}

/* Em telas menores, mostrar o botão toggle */
@media (max-width: 768px) {
  .sidebarToggle {
    display: flex;
    top: 75px;
  }

  .mainContent {
    width: 100%;
  }
}

/* Botão para selecionar tarefa quando sidebar está fechada */
.openTasksButton {
  margin-top: 1.5rem;
  background-color: transparent;
  border: 1px solid rgba(106, 27, 154, 0.5);
  color: #6a1b9a;
  padding: 0.6rem 1.5rem;
  border-radius: 30px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.openTasksButton:hover {
  background-color: rgba(106, 27, 154, 0.1);
  border-color: #6a1b9a;
}

@media (max-width: 1200px) {
  .timerCircleContainer {
    width: 280px;
    height: 280px;
  }

  .timeText {
    font-size: 3.2rem;
  }
}

@media (max-width: 992px) {
  .timerCircleContainer {
    width: 260px;
    height: 260px;
  }

  .timeText {
    font-size: 3rem;
  }

  .timerSection {
    max-width: 450px;
  }
}

@media (max-width: 768px) {
  .dashboard {
    flex-direction: column;
  }

  .timerCircleContainer {
    width: 240px;
    height: 240px;
    margin-bottom: 1.5rem;
  }

  .timeText {
    font-size: 2.8rem;
  }

  .timerSection {
    padding: 1.5rem;
    max-width: 400px;
  }

  .startButton,
  .pauseButton {
    padding: 0.7rem 2.5rem;
    font-size: 1rem;
  }

  .modeButton {
    padding: 0.5rem 0.8rem;
    margin: 0 0.3rem;
  }
}

@media (max-width: 576px) {
  .timerCircleContainer {
    width: 220px;
    height: 220px;
  }

  .timeText {
    font-size: 2.5rem;
  }

  .taskName {
    font-size: 0.9rem;
    max-width: 90%;
  }

  .timerSection {
    width: calc(100% - 2rem);
    padding: 1.2rem;
    max-width: 350px;
  }

  .startButton,
  .pauseButton {
    padding: 0.6rem 2rem;
    font-size: 0.95rem;
  }

  .modeButton {
    font-size: 0.9rem;
    padding: 0.5rem 0.7rem;
    margin: 0 0.2rem;
  }

  .timerModes {
    margin-bottom: 1.5rem;
  }
}

/* Ajustes para telas muito pequenas */
@media (max-width: 380px) {
  .timerCircleContainer {
    width: 200px;
    height: 200px;
  }

  .timeText {
    font-size: 2.2rem;
  }

  .taskName {
    font-size: 0.8rem;
  }

  .timerControls {
    margin: 1.5rem 0;
  }
}
